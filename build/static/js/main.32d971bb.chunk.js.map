{"version":3,"sources":["progressClean.js","dataClean.js","App.js","reportWebVitals.js","index.js"],"names":["houses_progress","require","globalRegex","RegExp","lel","JSON","parse","data","chartData","finalArray","newArray","newNewArray","i","series","length","element","y","push","Math","round","categories","keyArray","valueArray","outArray","progressObject","key","value","test","objMap","dirtyProgress","module","exports","newDirtyProgress","houses","uuidv4","v4","firstRow","toCamelCase","words","result","wordMod","toLowerCase","substr","toUpperCase","idAdd","formatDate","newDate","Date","replace","month","getMonth","day","getDate","year","getFullYear","toBoolean","progressAppend","progArray","Object","keys","values","inputArray","entry","modEntry","match","createKeyArray","homes","houseObject","dataArray","j","elementItem","keyItem","objectMap","id","created","actualStart","permit","citySub","utilitiesPaid","utilitiesSent","ccRs","floorJoists","orderLumber","orderMaterial","orderOsb","planReview","selections","trusses","jobColor","substring","progress","jobName","TitleSection","props","hex","color","motion","div","className","style","backgroundColor","streetAddress","PillSection","pillList","company","modelNumber","subdivisionAndPhase","lotNumber","city","projectManager","listingAgent","jobType","ref","useRef","useState","isOverflowed","setIsOverflowed","testList","setTestList","filter","pill","index","useEffect","current","clientWidth","scrollWidth","handleFilter","filtered","ul","expandClass","map","li","list","overFlowVal","handleOverflowRender","IndicatorGroup","assignColor","indicatorVal","widthType","materials","osb","ccrs","lumber","PermitGroup","yearChopper","date","undefined","slice","utilNotifier","width","SqftGroup","sfAppender","garage","covered","LotGroup","lotSize","parcel","ProgressGroup","max","CardList","items","setIndex","contentItem","layout","onClick","layoutId","console","log","ExpandedCard","card","flexWrap","alignContent","garageSf","coveredAreaSf","parcelNumber","App","AnimateSharedLayout","type","AnimatePresence","initial","opacity","animate","exit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32d971bb.chunk.js","sourcesContent":["const houses_progress = require(\"./progress.json\");\r\n\r\nconst globalRegex = new RegExp(/([*])\\w+/);\r\n\r\n\r\nlet lel = JSON.parse(houses_progress.data.chartData)\r\n\r\n// let form = JSON.parse(houses_progress.data.chartData)\r\n// let date = JSON.parse(houses_progress.data.chartData)\r\n// console.log(date.series)\r\n\r\n\r\n// let progressObject = {}\r\nlet finalArray = []\r\n\r\nlet newArray = []\r\nlet newNewArray = []\r\n\r\n\r\nfor (let i = 0; i < lel.series[0].data.length; i++) {\r\n    const element = lel.series[0].data[i].y;\r\n    newArray.push(Math.round(element))\r\n}\r\n\r\n\r\nfor (let i = 0; i < lel.categories.length; i++) {\r\n    const element = lel.categories[i];\r\n    newNewArray.push(element)\r\n}\r\n\r\nconst objMap = (keyArray, valueArray, outArray) => {\r\n    let progressObject = {}\r\n    for (let i = 0; i < keyArray.length; i++) {\r\n        progressObject = {}\r\n        const key = keyArray[i];\r\n        const value = valueArray[i];\r\n\r\n        if (globalRegex.test(key)) {\r\n            continue;\r\n        }\r\n\r\n        progressObject[key] = value\r\n        \r\n        outArray.push(progressObject)\r\n    }\r\n}\r\n\r\nobjMap(newNewArray, newArray, finalArray)\r\n\r\n\r\n// console.log(finalArray)\r\n// console.log(newArray.length)\r\n// console.log(newNewArray.length)\r\n\r\nconst dirtyProgress = finalArray\r\n\r\nmodule.exports = {dirtyProgress}\r\n\r\n\r\n\r\n\r\n","const dirtyProgress = require(\"./progressClean\")\r\nconst newDirtyProgress = dirtyProgress\r\nconst houses = require(\"./houses.json\");\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nlet firstRow = houses[0];\r\n\r\nconst toWords = (input) => {\r\n    var regex = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])|\\d+/g;\r\n    \r\n    return input.match(regex);\r\n}\r\n\r\nconst toCamelCase = (words) => {\r\n    let result = \"\";\r\n    \r\n    for (let i = 0; i < words.length; i++) {\r\n        const word = words[i];\r\n        let wordMod = word.toLowerCase();\r\n\r\n        if (i !== 0) {\r\n            wordMod = wordMod.substr(0,1).toUpperCase() + wordMod.substr(1);\r\n        }\r\n\r\n        result +=wordMod;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst createKeyArray = (inputArray) => {\r\n    let result = [];\r\n    for (let i = 0; i < inputArray.length; i++) {\r\n        let entry = inputArray[i];\r\n        let modEntry = toCamelCase(toWords(entry));\r\n        result.push(modEntry);\r\n    } \r\n    return result;\r\n}\r\n\r\nconst objectMap = (keyArray, dataArray) => {\r\n    for (let i = 1; i < dataArray.length; i++) {\r\n        let element = dataArray[i];\r\n        for (let j = 0; j < element.length; j++) {\r\n            let elementItem = element[j];\r\n            let keyItem = keyArray[j];\r\n            houseObject[keyItem] = elementItem;\r\n        }\r\n        homes.push(houseObject)\r\n        houseObject = {};\r\n    }\r\n}\r\n\r\n\r\n\r\nconst idAdd = (element) => {\r\n    let newId = uuidv4()\r\n    return newId\r\n}\r\n\r\nconst formatDate = (element) => {\r\n    if (element !== null) {\r\n            let newDate = new Date(element.replace(/\\s/, 'T')+'Z')\r\n            let month = newDate.getMonth()+1\r\n            let day = newDate.getDate()\r\n            let year = newDate.getFullYear()\r\n\r\n\r\n            return `${month}/${day}/${year}`\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\nconst toBoolean = (element) => {\r\n    if (element === 'Yes') {\r\n        return true\r\n    } else if (element === 'No') {\r\n        return false\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst toHex = (element) => {\r\n    return `#${element.substring(2)}`\r\n}\r\n\r\nconst progressAppend = (element, progArray) => {\r\n    for (let i = 0; i < progArray.length; i++) {\r\n        const key = progArray[i];\r\n        // console.log(key)\r\n        if (element === Object.keys(key)[0]) {\r\n            return Object.values(key)[0]\r\n        }\r\n    }\r\n}\r\n\r\nlet keys = createKeyArray(firstRow);\r\nconst homes = [];\r\nlet houseObject = {};\r\n\r\n\r\n\r\nobjectMap(keys, houses);\r\nidAdd(homes)\r\n\r\n\r\n\r\nfor (let i = 0; i < homes.length; i++) {\r\n    const element = homes[i];\r\n\r\n    element.id = idAdd(element)\r\n\r\n    element.created = formatDate(element.created)\r\n    element.actualStart = formatDate(element.actualStart)\r\n    element.permit = formatDate(element.permit)\r\n    element.citySub = formatDate(element.citySub)\r\n    element.utilitiesPaid = formatDate(element.utilitiesPaid)\r\n    element.utilitiesSent = formatDate(element.utilitiesSent)\r\n    \r\n    element.ccRs = toBoolean(element.ccRs)\r\n    element.floorJoists = toBoolean(element.floorJoists)\r\n    element.orderLumber = toBoolean(element.orderLumber)\r\n    element.orderMaterial = toBoolean(element.orderMaterial)\r\n    element.orderOsb = toBoolean(element.orderOsb)\r\n    element.planReview = toBoolean(element.planReview)\r\n    element.selections = toBoolean(element.selections)\r\n    element.trusses = toBoolean(element.trusses)\r\n\r\n    element.jobColor = toHex(element.jobColor)\r\n\r\n    element.progress = progressAppend(element.jobName, newDirtyProgress.dirtyProgress)\r\n}\r\n\r\n\r\n// console.log(homes)\r\n\r\n\r\n// console.log(homes)\r\n\r\n// console.log(newDirtyProgress.dirtyProgress[6])\r\n\r\n// console.log(Object.keys(newDirtyProgress.dirtyProgress[6])[0])\r\n// console.log(Object.values(newDirtyProgress.dirtyProgress[6])[0])\r\n\r\n// console.log(homes)\r\n// console.log(dirtyProgress)\r\n\r\n\r\nexport default homes\r\n\r\n// console.log(JSON.stringify(homes, null, 2));","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\"\nimport './App.css';\nimport homes from './dataClean';\n\n// let {PythonShell} = require('python-shell');\n\n\n// let options = {\n//   scriptPath: 'C:/Users/daniel.lavrentiev/Dropbox/Screen Project/Scraper',\n//   pythonOptions: ['-u']\n// }\n\n\n// function handleRefresh () {\n//   PythonShell.run('test_cleaner.py', options, function (err, results) {\n//     if (err) throw err;\n//     console.log('results: &j', results);\n//   });\n// }\n\n\n// function ResetButton (props) {\n//   return (\n//     <button className='refresh'>Refresh</button>\n//   )\n// }\n\nfunction TitleSection(props) {\n\n  const hex = props.color\n\n  return (\n    <motion.div className='title-section'>\n      <motion.div className='color-square' style={{ backgroundColor: hex }} ></motion.div>\n      <motion.div className='title'>\n        {props.streetAddress}\n      </motion.div>\n    </motion.div>\n  );\n}\n\nfunction PillSection(props) { // This code looks like shit, but don't screw with it\n  const pillList = [props.company,\n                    props.modelNumber, \n                    props.subdivisionAndPhase, \n                    props.lotNumber, \n                    props.city, \n                    props.projectManager, \n                    props.listingAgent, \n                    props.jobType]  \n  const ref = useRef(); // Don't not use useRef, using literally anything else will break this component\n  const [isOverflowed, setIsOverflowed] = useState(false);\n  const [testList, setTestList] = useState(pillList);\n  let filtered = testList.filter((pill, index) => index < testList.length - 1);\n  \n\n      \n  useEffect(() => {\n    if (ref.current.clientWidth < ref.current.scrollWidth) {\n      setIsOverflowed(true)\n    } else {\n      setIsOverflowed(false)\n    }\n  }, [ref, isOverflowed])\n\n  useEffect(() =>\n  !isOverflowed ? handleFilter : setIsOverflowed(false),\n  [isOverflowed]// I have no idea why this works but don't touch it\n)\n\n\nconst handleOverflowRender = (list) => {\n  let overFlowVal = pillList.length - list.length\n  if (list.length < pillList.length) {\n    return <motion.li className='infopill-expand'>+{overFlowVal}</motion.li>\n  } else {\n  }\n}\n\n  const handleFilter = () => {\n    let filtered = testList.filter((pill, index) => index < testList.length - 1);\n    setTestList(filtered)\n  }\n  \n\n  return (\n    <motion.ul ref={ref} className={props.expandClass}  >\n      {testList.map((pill, i) => \n        <motion.li key={i} className='infopill'>{pill}</motion.li>\n      )}\n      {handleOverflowRender(testList)}\n    </motion.ul>\n  )\n}\n\n\n\nfunction IndicatorGroup(props) {\n\n  function assignColor(indicatorVal) {\n    if (indicatorVal) {\n      return 'rgb(122, 209, 106)'\n    } else {\n      return 'rgb(214, 79, 79)'\n    }\n  }\n\n  return (\n    <motion.div className='grouper' id={props.widthType}>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.selections) }}>\n        Selections\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.materials) }} >\n        Materials\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.osb) }} >\n        OSB\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.planReview) }} >\n        Fee\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.floorJoists) }} >\n        Joists\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.ccrs) }} >\n        CCR\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.lumber) }} >\n        Lumber\n      </motion.div>\n      <motion.div className='indicator' style={{ backgroundColor: assignColor(props.trusses) }} >\n        Trusses\n      </motion.div>\n    </motion.div>\n  );\n}\n\nfunction PermitGroup (props) {\n\n  function yearChopper (date) {\n    if (date !== null && date !== undefined) {\n      let chopped = (date.slice(0, -5))\n      // let choppedStr = chopped.toString()\n      return chopped\n    } else {\n      return 'null'\n    }\n  }\n\n  const utilNotifier = (value) => {\n    if (value !== null && value !== undefined) {\n      return <motion.div className='relational-value'>{yearChopper(value)}</motion.div>\n    } else {\n      return <motion.div className='relational-notification'>!</motion.div>\n    }\n  }\n  const permitNotifier = (value) => {\n    if (value !== null && value !== undefined) {\n      return <motion.div className='relational-value'>{yearChopper(value)}</motion.div>\n    } else {\n      return <motion.div className='relational-notification' style={{ backgroundColor: 'rgb(235,190,65)' }}>-</motion.div>\n    }\n  }\n\n  return (\n    <motion.div className='grouper' id='permit-group'>\n              <motion.div className='relational-container ' style={{ width: '45%' }}>\n                <motion.div className='relational-key'>City</motion.div>\n                <motion.div className='relational-line'></motion.div>\n                <motion.div className='relational-value'>{yearChopper(props.citySub)}</motion.div>\n              </motion.div>\n              <motion.div className='relational-container ' style={{ width: '55%' }}>\n                <motion.div className='relational-key'>Utils sent</motion.div>\n                <motion.div className='relational-line'></motion.div>\n                {utilNotifier(props.utilitiesSent)}\n              </motion.div>\n              <motion.div className='relational-container' style={{ width: '45%' }}>\n                <motion.div className='relational-key'>Permit</motion.div>\n                <motion.div className='relational-line'></motion.div>\n                <motion.div className='relational-value'>{yearChopper(props.permit)}</motion.div>\n                \n              </motion.div>\n              <motion.div className='relational-container' style={{ width: '55%' }}>\n                <motion.div className='relational-key'>Utils payed</motion.div>\n                <motion.div className='relational-line'></motion.div>\n                {utilNotifier(props.utilitiesPaid)}\n              </motion.div>\n            </motion.div>\n  )\n}\n\n\nfunction SqftGroup (props) {\n  const sfAppender = (value) => {\n    return `${value} SF`\n  }\n\n  return (\n    <motion.div className='grouper' id='sf-group' >\n      <motion.div className='relational-container' style={{ width:'100%' }} >\n        <motion.div className='relational-key' >Garage</motion.div>\n        <motion.div className='relational-line' ></motion.div>\n        <motion.div className='relational-value'>{sfAppender(props.garage)}</motion.div>\n      </motion.div>\n      <motion.div className='relational-container' style={{ width:'100%' }} >\n        <motion.div className='relational-key' >Covered</motion.div>\n        <motion.div className='relational-line' ></motion.div>\n        <motion.div className='relational-value'>{sfAppender(props.covered)}</motion.div>\n      </motion.div>\n    </motion.div>\n  )\n}\n\n\nfunction LotGroup (props) {\n\n  const parcelChecker = (value) => {\n    if (!value) {\n      return 'null'\n    } else {\n      return value\n    }\n  }\n\n  return (\n    <motion.div className='grouper' id='lot-group' >\n      <motion.div className='relational-container' style={{ width:'100%' }} >\n        <motion.div className='relational-key' >Lot Size</motion.div>\n        <motion.div className='relational-line' ></motion.div>\n        <motion.div className='relational-value'>{props.lotSize}</motion.div>\n      </motion.div>\n      <motion.div className='relational-container' style={{ width:'100%' }} >\n        <motion.div className='relational-key' >Parcel</motion.div>\n        <motion.div className='relational-line' ></motion.div>\n        <motion.div className='relational-value'>{parcelChecker(props.parcel)}</motion.div>\n      </motion.div>\n    </motion.div>\n  )\n}\n\nfunction ProgressGroup(props) {\n  return (\n    <motion.div className='grouper' id='progress-group'>\n      <motion.div className='relational-container' style={{ width: '100%' }}>\n        <motion.div className='relational-key' >Schedule</motion.div>\n        <motion.progress max='100' value={props.progress} ></motion.progress>\n        <motion.div className='progress-text' >{props.progress}%</motion.div>\n      </motion.div>\n    </motion.div>\n  )\n}\n\nfunction CardList({ items, setIndex }) {\n\n  return (\n    <ul className='cards-container'>\n      {items.map((contentItem, i) => (\n        contentItem.streetAddress ?\n        <motion.li layout\n          className='card'\n          key={i}\n          onClick={() => setIndex(i)}\n          layoutId={contentItem.id}\n        >\n\n            <motion.div layout layoutId={`${contentItem.id}head`} className='head'>\n              <TitleSection streetAddress={contentItem.streetAddress} color={contentItem.jobColor} />\n              <PillSection expandClass='pill-container' modelNumber={contentItem.modelNumber} subdivisionAndPhase={contentItem.subdivisionAndPhase} lotNumber={contentItem.lotNumber} city={contentItem.city} projectManager={contentItem.projectManager} listingAgent={contentItem.listingAgent} jobType={contentItem.jobType} company={contentItem.company} />\n            </motion.div>\n\n\n          <motion.div className='body' layout layoutId={`${contentItem.id}body`} >\n            <IndicatorGroup widthType='indicator-group' ccrs={contentItem.ccRs} floorJoists={contentItem.floorJoists} lumber={contentItem.orderLumber} materials={contentItem.orderMaterial} osb={contentItem.orderOsb} planReview={contentItem.planReview} selections={contentItem.selections} trusses={contentItem.trusses} />\n            <PermitGroup permit={contentItem.permit} utilitiesPaid={contentItem.utilitiesPaid} utilitiesSent={contentItem.utilitiesSent} citySub={contentItem.citySub} />\n          </motion.div>\n        </motion.li> : console.log('something')\n      ))}\n    </ul>\n  )\n}\n\nfunction ExpandedCard(props) {\n  return (\n    <div className='cards-container-unfolded' onClick={props.onClick}>\n      <motion.div layout\n        layoutId={props.card.id}\n        className='card-expanded'\n      >\n        \n          <motion.div layout layoutId={`${props.card.id}head`} className='head'>\n            <TitleSection streetAddress={props.card.streetAddress} color={props.card.jobColor} />\n            <PillSection  expandClass='pill-container-expanded' modelNumber={props.card.modelNumber} subdivisionAndPhase={props.card.subdivisionAndPhase} lotNumber={props.card.lotNumber} city={props.card.city} projectManager={props.card.projectManager} listingAgent={props.card.listingAgent} jobType={props.card.jobType} company={props.card.company}/>\n          </motion.div>\n\n          <motion.div layout layoutId={`${props.card.id}body`}  className='body' style={{ flexWrap:'wrap', alignContent:'flex-start' }}>\n            <IndicatorGroup widthType='indicator-group-expanded' ccrs={props.card.ccRs} floorJoists={props.card.floorJoists} lumber={props.card.orderLumber} materials={props.card.orderMaterial} osb={props.card.orderOsb} planReview={props.card.planReview} selections={props.card.selections} trusses={props.card.trusses} />\n            <ProgressGroup progress={props.card.progress} />\n            <PermitGroup permit={props.card.permit} utilitiesPaid={props.card.utilitiesPaid} utilitiesSent={props.card.utilitiesSent} citySub={props.card.citySub} />\n            <SqftGroup garage={props.card.garageSf} covered={props.card.coveredAreaSf} />\n            <LotGroup  lotSize={'null'} parcel={props.card.parcelNumber} />\n          </motion.div>\n        \n      </motion.div>\n    </div>\n  )\n}\n\n\n\nfunction App() {\n\n  const [index, setIndex] = useState(false);\n  return (\n    <AnimateSharedLayout type=\"crossfade\">\n      <CardList items={homes} setIndex={setIndex}/>\n      <AnimatePresence>\n        {index !== false && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            key='modal'\n            className='modal'\n            onClick={() => setIndex(false)}\n          >\n          </motion.div>\n        )}\n\n        {index !== false && (\n          <ExpandedCard\n            key='expandedCard'\n            index={index}\n            card={homes[index]}\n            setIndex={setIndex}\n            onClick={() => setIndex(false)}\n          >\n          </ExpandedCard>\n        )}\n      </AnimatePresence>\n    </AnimateSharedLayout>\n\n  );\n}\n\n\n// const content = ['this is a test', 'this is another test', 'another testing thing', 'yet another testing thing', 'Lorem enim proident adipisicing sunt aute esse qui aliqua est tempor minim elit exercitation incididunt.', 'lorem12Sit sint excepteur in sint dolor mollit duis ea magna culpa.'];\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import TestAlgo from './TestAlgo';\r\n// import {PythonShell} from 'python-shell';\r\n\r\n// let {PythonShell} = require('python-shell');\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}