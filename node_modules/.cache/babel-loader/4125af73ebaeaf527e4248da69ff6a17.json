{"ast":null,"code":"const houses_progress = require(\"./progress.json\");\n\nconst globalRegex = new RegExp(/([*])\\w+/);\nlet lel = JSON.parse(houses_progress.data.chartData);\nconsole.log(lel); // let form = JSON.parse(houses_progress.data.chartData)\n// let date = JSON.parse(houses_progress.data.chartData)\n// console.log(date.series)\n// let progressObject = {}\n\nlet finalArray = [];\nlet newArray = [];\nlet newNewArray = [];\n\nfor (let i = 0; i < lel.series[0].data.length; i++) {\n  const element = lel.series[0].data[i].y;\n  newArray.push(Math.round(element));\n}\n\nfor (let i = 0; i < lel.categories.length; i++) {\n  const element = lel.categories[i];\n  newNewArray.push(element);\n}\n\nconst objMap = (keyArray, valueArray, outArray) => {\n  let progressObject = {};\n\n  for (let i = 0; i < keyArray.length; i++) {\n    progressObject = {};\n    const key = keyArray[i];\n    const value = valueArray[i];\n\n    if (globalRegex.test(key)) {\n      continue;\n    }\n\n    progressObject[key] = value;\n    outArray.push(progressObject);\n  }\n};\n\nobjMap(newNewArray, newArray, finalArray); // console.log(finalArray)\n// console.log(newArray.length)\n// console.log(newNewArray.length)\n\nconst dirtyProgress = finalArray;\nmodule.exports = {\n  dirtyProgress\n};","map":{"version":3,"sources":["C:/Users/daniel.lavrentiev/Desktop/screen-react-test/screen/src/progressClean.js"],"names":["houses_progress","require","globalRegex","RegExp","lel","JSON","parse","data","chartData","console","log","finalArray","newArray","newNewArray","i","series","length","element","y","push","Math","round","categories","objMap","keyArray","valueArray","outArray","progressObject","key","value","test","dirtyProgress","module","exports"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AAEA,MAAMC,WAAW,GAAG,IAAIC,MAAJ,CAAW,UAAX,CAApB;AAGA,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,eAAe,CAACO,IAAhB,CAAqBC,SAAhC,CAAV;AAEAC,OAAO,CAACC,GAAR,CAAYN,GAAZ,E,CAEA;AACA;AACA;AAGA;;AACA,IAAIO,UAAU,GAAG,EAAjB;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAGA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,CAACW,MAAJ,CAAW,CAAX,EAAcR,IAAd,CAAmBS,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;AAChD,QAAMG,OAAO,GAAGb,GAAG,CAACW,MAAJ,CAAW,CAAX,EAAcR,IAAd,CAAmBO,CAAnB,EAAsBI,CAAtC;AACAN,EAAAA,QAAQ,CAACO,IAAT,CAAcC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAd;AACH;;AAID,KAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,CAACkB,UAAJ,CAAeN,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,QAAMG,OAAO,GAAGb,GAAG,CAACkB,UAAJ,CAAeR,CAAf,CAAhB;AACAD,EAAAA,WAAW,CAACM,IAAZ,CAAiBF,OAAjB;AACH;;AAED,MAAMM,MAAM,GAAG,CAACC,QAAD,EAAWC,UAAX,EAAuBC,QAAvB,KAAoC;AAC/C,MAAIC,cAAc,GAAG,EAArB;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,QAAQ,CAACR,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACtCa,IAAAA,cAAc,GAAG,EAAjB;AACA,UAAMC,GAAG,GAAGJ,QAAQ,CAACV,CAAD,CAApB;AACA,UAAMe,KAAK,GAAGJ,UAAU,CAACX,CAAD,CAAxB;;AAEA,QAAIZ,WAAW,CAAC4B,IAAZ,CAAiBF,GAAjB,CAAJ,EAA2B;AACvB;AACH;;AAEDD,IAAAA,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAtB;AAEAH,IAAAA,QAAQ,CAACP,IAAT,CAAcQ,cAAd;AACH;AACJ,CAfD;;AAiBAJ,MAAM,CAACV,WAAD,EAAcD,QAAd,EAAwBD,UAAxB,CAAN,C,CAGA;AACA;AACA;;AAEA,MAAMoB,aAAa,GAAGpB,UAAtB;AAGAqB,MAAM,CAACC,OAAP,GAAiB;AAACF,EAAAA;AAAD,CAAjB","sourcesContent":["const houses_progress = require(\"./progress.json\");\r\n\r\nconst globalRegex = new RegExp(/([*])\\w+/);\r\n\r\n\r\nlet lel = JSON.parse(houses_progress.data.chartData)\r\n\r\nconsole.log(lel)\r\n\r\n// let form = JSON.parse(houses_progress.data.chartData)\r\n// let date = JSON.parse(houses_progress.data.chartData)\r\n// console.log(date.series)\r\n\r\n\r\n// let progressObject = {}\r\nlet finalArray = []\r\nlet newArray = []\r\nlet newNewArray = []\r\n\r\n\r\nfor (let i = 0; i < lel.series[0].data.length; i++) {\r\n    const element = lel.series[0].data[i].y;\r\n    newArray.push(Math.round(element))\r\n}\r\n\r\n\r\n\r\nfor (let i = 0; i < lel.categories.length; i++) {\r\n    const element = lel.categories[i];\r\n    newNewArray.push(element)\r\n}\r\n\r\nconst objMap = (keyArray, valueArray, outArray) => {\r\n    let progressObject = {}\r\n    for (let i = 0; i < keyArray.length; i++) {\r\n        progressObject = {}\r\n        const key = keyArray[i];\r\n        const value = valueArray[i];\r\n\r\n        if (globalRegex.test(key)) {\r\n            continue;\r\n        }\r\n\r\n        progressObject[key] = value\r\n        \r\n        outArray.push(progressObject)\r\n    }\r\n}\r\n\r\nobjMap(newNewArray, newArray, finalArray)\r\n\r\n\r\n// console.log(finalArray)\r\n// console.log(newArray.length)\r\n// console.log(newNewArray.length)\r\n\r\nconst dirtyProgress = finalArray\r\n\r\n\r\nmodule.exports = {dirtyProgress}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}