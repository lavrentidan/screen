[{"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\index.js":"1","C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\App.js":"2","C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\reportWebVitals.js":"3","C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\dataClean.js":"4","C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\progressClean.js":"5"},{"size":699,"mtime":1620163109941,"results":"6","hashOfConfig":"7"},{"size":18160,"mtime":1620878596162,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":6386,"mtime":1620877406132,"results":"10","hashOfConfig":"7"},{"size":2181,"mtime":1620666653507,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ryvpfz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\index.js",[],["24","25"],"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\App.js",["26","27","28","29","30","31","32","33","34","35","36"],"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\reportWebVitals.js",[],"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\dataClean.js",["37","38","39"],"C:\\Users\\daniel.lavrentiev\\Desktop\\screen-react-test\\screen\\src\\progressClean.js",["40","41"],"// const houses_progress = require(\"./progress.json\");\r\nimport finalFetch from './dataClean'\r\nconst { default: fetch } = require(\"node-fetch\");\r\n\r\n\r\n\r\n\r\nconst globalRegex = new RegExp(/([*])\\w+/);\r\n\r\nlet lel;\r\nlet dirtyProgress;\r\n\r\n// Parses the json data and save it to a variable\r\nconst fetchProgress = async () => {\r\n    let houses_progress = await (await fetch('/.netlify/functions/progressPuller')).json()\r\n    lel = JSON.parse(houses_progress.data.chartData)\r\n    return lel\r\n}\r\n\r\n\r\n// let form = JSON.parse(houses_progress.data.chartData)\r\n// let date = JSON.parse(houses_progress.data.chartData)\r\n// console.log(date.series)\r\n\r\nlet finalArray = []\r\nlet newArray = []\r\nlet newNewArray = []\r\n\r\nasync function finalProgressFetch() {\r\n    fetchProgress().then((lel) => {\r\n        // let progressObject = {}\r\n\r\n\r\n        // Set newArray to list round numbers of the completion\r\n        for (let i = 0; i < lel.series[0].data.length; i++) {\r\n            const element = lel.series[0].data[i].y;\r\n            newArray.push(Math.round(element))\r\n        }\r\n\r\n        // Set newNewArray to list all the houses\r\n        for (let i = 0; i < lel.categories.length; i++) {\r\n            const element = lel.categories[i];\r\n            newNewArray.push(element)\r\n        }\r\n\r\n        // Maps the array of houses to the array of completion values\r\n        // Creates an array of objects: {house: percentage}\r\n        const objMap = (keyArray, valueArray, outArray) => {\r\n            let progressObject = {}\r\n            for (let i = 0; i < keyArray.length; i++) {\r\n                progressObject = {}\r\n                const key = keyArray[i];\r\n                const value = valueArray[i];\r\n\r\n                if (globalRegex.test(key)) {\r\n                    continue;\r\n                }\r\n\r\n                progressObject[key] = value\r\n                \r\n                outArray.push(progressObject)\r\n            }\r\n        }\r\n\r\n        objMap(newNewArray, newArray, finalArray)\r\n\r\n\r\n        // console.log(finalArray)\r\n        // console.log(newArray.length)\r\n        // console.log(newNewArray.length)\r\n    })\r\n    return finalArray\r\n}\r\n\r\n\r\n\r\n\r\nexport default finalProgressFetch\r\n\r\n\r\n\r\n\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":38,"nodeType":"48","messageId":"49","endLine":1,"endColumn":49},{"ruleId":"46","severity":1,"message":"50","line":9,"column":8,"nodeType":"48","messageId":"49","endLine":9,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":13},{"ruleId":"46","severity":1,"message":"52","line":11,"column":8,"nodeType":"48","messageId":"49","endLine":11,"endColumn":16},{"ruleId":"46","severity":1,"message":"53","line":39,"column":7,"nodeType":"48","messageId":"49","endLine":39,"endColumn":14},{"ruleId":"46","severity":1,"message":"54","line":72,"column":7,"nodeType":"48","messageId":"49","endLine":72,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":86,"column":5,"nodeType":"57","endLine":86,"endColumn":19,"suggestions":"58"},{"ruleId":"46","severity":1,"message":"59","line":175,"column":9,"nodeType":"48","messageId":"49","endLine":175,"endColumn":23},{"ruleId":"46","severity":1,"message":"60","line":275,"column":10,"nodeType":"48","messageId":"49","endLine":275,"endColumn":20},{"ruleId":"46","severity":1,"message":"61","line":275,"column":22,"nodeType":"48","messageId":"49","endLine":275,"endColumn":35},{"ruleId":"46","severity":1,"message":"62","line":373,"column":7,"nodeType":"48","messageId":"49","endLine":373,"endColumn":13},{"ruleId":"46","severity":1,"message":"63","line":5,"column":7,"nodeType":"48","messageId":"49","endLine":5,"endColumn":12},{"ruleId":"46","severity":1,"message":"64","line":11,"column":7,"nodeType":"48","messageId":"49","endLine":11,"endColumn":12},{"ruleId":"46","severity":1,"message":"65","line":12,"column":7,"nodeType":"48","messageId":"49","endLine":12,"endColumn":14},{"ruleId":"46","severity":1,"message":"66","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},{"ruleId":"46","severity":1,"message":"67","line":11,"column":5,"nodeType":"48","messageId":"49","endLine":11,"endColumn":18},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'fetch' is defined but never used.","'DataGrid' is defined but never used.","'updater' is assigned a value but never used.","'filtered' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'permitNotifier' is assigned a value but never used.","'cardUpdate' is assigned a value but never used.","'setCardUpdate' is assigned a value but never used.","'cities' is assigned a value but never used.","'axios' is assigned a value but never used.","'https' is assigned a value but never used.","'request' is assigned a value but never used.","'finalFetch' is defined but never used.","'dirtyProgress' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [handleFilter, isOverflowed]",{"range":"73","text":"74"},[2139,2153],"[handleFilter, isOverflowed]"]